# Calcolo combinatorio {#sec-apx-combinatorics}

```{r}
here::here("code", "_common.R") |>
    source()

if (!requireNamespace("pacman")) install.packages("pacman")
pacman::p_load(gtools, combinat)
```

Il **calcolo combinatorio** si occupa di determinare il numero di modi in cui è possibile combinare, ordinare o disporre elementi di uno o più insiemi, seguendo regole predefinite. Molti problemi di probabilità richiedono l'applicazione di tecniche combinatorie per calcolare le probabilità di eventi complessi. In questo capitolo, esploreremo le nozioni fondamentali del calcolo combinatorio, mettendo in relazione i suoi concetti con i vari metodi di **campionamento dall'urna**. Descriveremo i principi della somma e del prodotto che costituiscono le basi del calcolo combinatorio e trovano applicazione in problemi più complessi, come permutazioni, disposizioni e combinazioni.

---

## Principio della somma

Il **principio della somma** si applica quando un insieme può essere suddiviso in sottoinsiemi **disgiunti** (cioè senza sovrapposizioni). In questo caso, il numero totale di elementi è dato dalla somma degli elementi dei sottoinsiemi:

$$
n_{\text{tot}} = n_1 + n_2 + \dots + n_k .
$$

::: {#exm-} 

Un distributore contiene tre diversi scomparti di caramelle:

- Scomparto A: 10 caramelle alla menta,
- Scomparto B: 8 caramelle alla frutta,
- Scomparto C: 12 caramelle al cioccolato.

Quante caramelle diverse ci sono in totale nel distributore?

Secondo il **principio della somma**, il totale è dato dalla somma delle caramelle nei tre scomparti:

$$
n_{\text{tot}} = n_A + n_B + n_C .
$$

Calcolo in R:

```{r}
A <- 10
B <- 8
C <- 12

totale_caramelle <- A + B + C
totale_caramelle
```

**Risultato**: Nel distributore ci sono 30 caramelle in totale.
:::
---

## Principio del prodotto

Il **principio del prodotto** si applica quando un'operazione può essere suddivisa in più **fasi indipendenti**, ciascuna con un numero di possibilità specifico. Il numero totale di combinazioni è dato dal prodotto delle possibilità offerte da ciascuna fase:

$$
n_{\text{tot}} = n_1 \cdot n_2 \cdot \dots \cdot n_k .
$$

::: {#exm-}
Poniamo di avere quattro urne:  

- Urna A: 5 palline,  
- Urna B: 6 palline,  
- Urna C: 3 palline,  
- Urna D: 2 palline.  

Vogliamo formare insiemi di due palline, ciascuna estratta da urne differenti.  

Secondo il **principio del prodotto**, per ogni coppia di urne, il numero di combinazioni è dato dal prodotto delle palline nelle due urne. Successivamente, usiamo il **principio della somma** per sommare tutte le possibilità. 

$$
n_{\text{tot}} = AB + AC + AD + BC + BD + CD
$$

Calcolo in R:

```{r}
AB <- 5 * 6
AC <- 5 * 3
AD <- 5 * 2
BC <- 6 * 3
BD <- 6 * 2
CD <- 3 * 2

totale_insiemi <- AB + AC + AD + BC + BD + CD
totale_insiemi
```

**Risultato**: Si possono formare 91 insiemi di due palline, ciascuna estratta da urne differenti.
:::


### Il modello dell'urna e i metodi di campionamento

I problemi combinatori spesso si riducono a modelli di **estrazione di palline da urne**, con quattro principali varianti:

1. **Con ripetizione e ordine**: ogni estrazione rimette la pallina nell'urna (campionamento Bernoulliano).
2. **Senza ripetizione e con ordine**: ogni estrazione rimuove la pallina.
3. **Con ripetizione e senza ordine**: si considerano le combinazioni, ignorando l'ordine.
4. **Senza ripetizione e senza ordine**: si contano le combinazioni senza rimettere la pallina.

::: {#exm-}

```{r}
urna <- c("a", "b", "c")

# Con ripetizione e ordine
campionamento1 <- expand.grid(urna, urna) |>
    rename(Elemento1 = Var1, Elemento2 = Var2)

# Senza ripetizione e con ordine
campionamento2 <- permutations(n = length(urna), r = 2, v = urna) |>
    as.data.frame() |>
    rename(Elemento1 = V1, Elemento2 = V2)

# Con ripetizione e senza ordine
campionamento3 <- combinations(
    n = length(urna), r = 2, v = urna, repeats.allowed = TRUE
) |>
    as.data.frame() |>
    rename(Elemento1 = V1, Elemento2 = V2)

# Senza ripetizione e senza ordine
campionamento4 <- combinations(n = length(urna), r = 2, v = urna) |>
    as.data.frame() |>
    rename(Elemento1 = V1, Elemento2 = V2)

# Risultati
list(
    `Con ripetizione e ordine` = campionamento1,
    `Senza ripetizione e con ordine` = campionamento2,
    `Con ripetizione e senza ordine` = campionamento3,
    `Senza ripetizione e senza ordine` = campionamento4
)
```

:::

---

### Permutazioni Semplici

Le **permutazioni** rappresentano tutte le disposizioni possibili di un insieme di $n$ elementi distinti, considerando l'ordine. Il numero totale di permutazioni è dato dalla formula:

$$
P_n = n!
$$

dove $n!$ (n fattoriale) indica il prodotto di tutti i numeri interi da 1 a $n$:

$$
n! = n \cdot (n-1) \cdot (n-2) \cdot \dots \cdot 1 .
$$

::: {#exm-}

Calcoliamo tutte le permutazioni possibili per un insieme di tre elementi distinti $\{a, b, c\}$. Il numero di permutazioni atteso è:

$$
P_3 = 3! = 3 \cdot 2 \cdot 1 = 6 .
$$

Implementazione in R:

```{r}
# Insieme di partenza
A <- c("a", "b", "c")

# Calcolo delle permutazioni
perm <- permutations(n = length(A), r = length(A), v = A)

# Visualizzazione delle permutazioni
print(perm)

# Verifica del numero di permutazioni
nrow(perm)
```

Le permutazioni dell'insieme sono:

  $$
  \begin{aligned}
  &\{a, b, c\}, \{a, c, b\}, \{b, a, c\}, \{b, c, a\}, \{c, a, b\}, \{c, b, a\} .
  \end{aligned}
  $$

Il numero totale è $P_3 = 6$.
:::

---

#### Caratteristiche delle Permutazioni

Le permutazioni rappresentano un caso di **campionamento senza ripetizione con ordine**:

- **Senza ripetizione**: Ogni elemento può essere utilizzato una sola volta.
- **Con ordine**: La disposizione degli elementi è importante.

---

### Disposizioni Semplici

Le **disposizioni semplici** sono sequenze ordinate di $k$ elementi scelti da un insieme di $n$ elementi distinti. Il numero totale di disposizioni si calcola con la formula:

$$
D_{n,k} = \frac{n!}{(n-k)!}
$$

dove:

- $n!$ (fattoriale di $n$) è il prodotto dei numeri interi da 1 a $n$,
- $(n-k)!$ rappresenta il fattoriale della differenza tra il numero totale di elementi e quelli scelti.

::: {#exm-}

Consideriamo l'insieme$\{a, b, c\}$ ($n = 3$) e calcoliamo tutte le disposizioni possibili di 2 elementi ($k = 2$).  
Il numero di disposizioni atteso è:

$$
D_{3,2} = \frac{3!}{(3-2)!} = \frac{3 \cdot 2 \cdot 1}{1} = 6 .
$$

Implementazione in R:

```{r}
# Insieme di partenza
A <- c("a", "b", "c")

# Calcolo delle disposizioni di 2 elementi
disp <- permutations(n = length(A), r = 2, v = A)

# Visualizzazione delle disposizioni
print(disp)

# Verifica del numero di disposizioni
nrow(disp)
```

- Le disposizioni di 2 elementi sono:
  $$
  \{a, b\}, \{a, c\}, \{b, a\}, \{b, c\}, \{c, a\}, \{c, b\} .
  $$
- Il numero totale è $D_{3,2} = 6$. 

:::

---

#### Caratteristiche delle Disposizioni Semplici

Le disposizioni semplici rappresentano un caso di **campionamento senza ripetizione e con ordine**:

- **Senza ripetizione**: Ogni elemento può essere utilizzato una sola volta.
- **Con ordine**: La disposizione degli elementi selezionati è importante.

---

### Combinazioni Semplici

Le **combinazioni semplici** rappresentano i modi di selezionare $k$ elementi da un insieme di $n$ elementi **senza considerare l'ordine**. Il numero totale di combinazioni si calcola con la formula:

$$
C_{n,k} = \binom{n}{k} = \frac{n!}{k!(n-k)!}
$$

dove:

- $n!$ è il fattoriale di $n$,
- $k!$ è il fattoriale di $k$,
- $(n-k)!$ è il fattoriale della differenza tra il numero totale di elementi e quelli scelti.

---

::: {#exm-}

Consideriamo l'insieme $\{a, b, c\}$ ($n = 3$) e calcoliamo tutte le combinazioni possibili di 2 elementi ($k = 2$).  

Il numero di combinazioni atteso è:

$$
C_{3,2} = \binom{3}{2} = \frac{3!}{2! \cdot (3-2)!} = \frac{3 \cdot 2 \cdot 1}{2 \cdot 1 \cdot 1} = 3 .
$$

Implementazione in R:

```{r}
# Insieme di partenza
A <- c("a", "b", "c")

# Calcolo delle combinazioni di 2 elementi
comb <- combinations(n = length(A), r = 2, v = A)

# Visualizzazione delle combinazioni
print(comb)

# Verifica del numero di combinazioni
nrow(comb)
```

- Le combinazioni di 2 elementi sono:
  $$
  \{a, b\}, \{a, c\}, \{b, c\} .
  $$
- Il numero totale è $C_{3,2} = 3$.

::: 

---

#### Caratteristiche delle Combinazioni Semplici

Le combinazioni semplici rappresentano un caso di **campionamento senza ripetizione e senza ordine**:

- **Senza ripetizione**: Ogni elemento può essere selezionato una sola volta.
- **Senza ordine**: L'ordine degli elementi selezionati non ha importanza ($\{a, b\}$ è uguale a$\{b, a\}$).

---

Questo capitolo ha illustrato i legami tra i metodi del calcolo combinatorio e le diverse modalità di campionamento, mostrando come implementare questi concetti in R. 

## Bibliografia {.unnumbered}

